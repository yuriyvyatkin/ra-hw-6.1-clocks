{"version":3,"sources":["components/Clock/Clock.js","components/Form/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","props","state","getInitialState","userTimezone","parsedUserTimezone","Number","parseFloat","hoursUserTimezone","Math","trunc","minutesUserTimezone","toFixed","date","Date","timezoneOffset","getTimezoneOffset","hoursTimezoneOffset","floor","minutesTimezoneOffset","setHours","getHours","setMinutes","getMinutes","userDate","this","getUserDate","hr","min","sec","getSeconds","setState","timerID","setInterval","tick","clearInterval","className","id","name","xmlns","viewBox","cx","cy","r","d","style","transform","href","onClick","onDeleteClick","React","Component","Form","nameRef","createRef","handleInputChange","bind","current","focus","target","value","prevForm","onSubmit","event","preventDefault","onFormSubmit","htmlFor","type","onChange","ref","autoComplete","required","max","App","useState","clocks","setClocks","handleDeleteClick","index","findIndex","clock","getClockIndex","updatedClocks","slice","form","prevState","nanoid","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e39c054.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.css';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = this.getInitialState(props.userTimezone);\n  }\n\n  getUserDate(userTimezone) {\n    const parsedUserTimezone = +Number.parseFloat(userTimezone);\n    const hoursUserTimezone = Math.trunc(parsedUserTimezone);\n    const minutesUserTimezone = (parsedUserTimezone % 1).toFixed(2) * 100;\n    const date = new Date();\n    const timezoneOffset = date.getTimezoneOffset();\n    const hoursTimezoneOffset = Math.floor(timezoneOffset / 60);\n    const minutesTimezoneOffset = timezoneOffset % 60;\n\n    date.setHours(date.getHours() + hoursTimezoneOffset);\n    date.setMinutes(date.getMinutes() + minutesTimezoneOffset);\n    date.setHours(date.getHours() + hoursUserTimezone);\n    date.setMinutes(date.getMinutes() + minutesUserTimezone);\n\n    return date;\n  }\n\n  getInitialState(userTimezone) {\n    const userDate = this.getUserDate(userTimezone);\n\n    const hr = userDate.getHours();\n    const min = userDate.getMinutes();\n    const sec = userDate.getSeconds();\n\n    const hrPosition = (hr * 360 / 12) + (min * (360 / 60) / 12);\n    const minPosition = (min * 360 / 60) + (sec * (360 / 60) / 60);\n    const secPosition = sec * 360 / 60;\n\n    return {\n      hr: hrPosition,\n      min: minPosition,\n      sec: secPosition,\n    };\n  }\n\n  tick() {\n    this.setState({\n      hr: this.state.hr + (3 / 360),\n      min: this.state.min + (6 / 60),\n      sec: this.state.sec + 6,\n    })\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock-box\" id={this.props.id}>\n        <h3 className=\"Clock-name\">{this.props.name}</h3>\n        <svg className=\"Clock\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 600 600\">\n          <g className=\"Clock-face\">\n            <circle className=\"Clock-face__circle\" cx=\"300\" cy=\"300\" r=\"253.9\"/>\n            <path className=\"Clock-face__hour-marks\" d=\"M300.5 94V61M506 300.5h32M300.5 506v33M94 300.5H60M411.3 107.8l7.9-13.8M493 190.2l13-7.4M492.1 411.4l16.5 9.5M411 492.3l8.9 15.3M189 492.3l-9.2 15.9M107.7 411L93 419.5M107.5 189.3l-17.1-9.9M188.1 108.2l-9-15.6\"/>\n            <circle className=\"Clock-face__mid-circle\" cx=\"300\" cy=\"300\" r=\"16.2\"/>\n          </g>\n          <g className=\"Clock-hour\" style={{ transform: `rotate(${this.state.hr}deg)` }}>\n            <path className=\"Clock-hour__hour-arm\" d=\"M300.5 298V142\"/>\n            <circle className=\"Clock-sizing-box\" cx=\"300\" cy=\"300\" r=\"253.9\"/>\n          </g>\n          <g className=\"Clock-minute\" style={{ transform: `rotate(${this.state.min}deg)` }}>\n            <path className=\"Clock-minute__minute-arm\" d=\"M300.5 298V67\"/>\n            <circle className=\"Clock-sizing-box\" cx=\"300\" cy=\"300\" r=\"253.9\"/>\n          </g>\n          <g className=\"Clock-second\" style={{ transform: `rotate(${this.state.sec}deg)` }}>\n            <path className=\"Clock-second__second-arm\" d=\"M300.5 350V55\"/>\n            <circle className=\"Clock-sizing-box\" cx=\"300\" cy=\"300\" r=\"253.9\"/>\n          </g>\n        </svg>\n        <a\n          href=\"#0\"\n          className=\"Clock__delete\"\n          onClick={() => this.props.onDeleteClick(this.props.id)}\n        >\n          &#10005;\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport './Form.css';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.nameRef = React.createRef();\n    this.state = { name: '', userTimezone: '' };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.nameRef.current.focus();\n  }\n\n  handleInputChange({ target }) {\n    const { name, value } = target;\n\n    this.setState(prevForm => ({ ...prevForm, [name]: value }));\n  }\n\n  render() {\n    return (\n      <form\n        className=\"Form\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          this.props.onFormSubmit(this.state);\n          this.setState({ name: '', userTimezone: '' });\n          this.nameRef.current.focus();\n        }}\n      >\n        <div className=\"Form-control\">\n          <label htmlFor=\"name\">Название</label>\n          <input\n            className=\"Form-control__name\"\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n            ref={this.nameRef}\n            autoComplete=\"off\"\n            required\n          />\n        </div>\n        <div className=\"Form-control\">\n          <label htmlFor=\"user-timezone\">Временная зона</label>\n          <input\n            className=\"Form-control__user-timezone\"\n            type=\"number\"\n            id=\"user-timezone\"\n            name=\"userTimezone\"\n            min=\"-12\"\n            max=\"14\"\n            value={this.state.userTimezone}\n            onChange={this.handleInputChange}\n            required\n          />\n        </div>\n        <button\n          className=\"Form-control__button-add\"\n          type=\"submit\"\n        >\n          Добавить\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport './App.css';\nimport Clock from './components/Clock/Clock';\nimport Form from './components/Form/Form';\n\nfunction App() {\n  const [clocks, setClocks] = useState([]);\n\n  function handleFormSubmit(form) {\n    setClocks((prevState) => [...prevState, {\n      id: nanoid(),\n      name: form.name,\n      userTimezone: form.userTimezone,\n    }]);\n  }\n\n  function getClockIndex(id) {\n    const index = clocks.findIndex((clock) => clock.id === id);\n\n    return index;\n  }\n\n  function handleDeleteClick(id) {\n    const index = getClockIndex(id);\n\n    const updatedClocks = [\n      ...clocks.slice(0, index),\n      ...clocks.slice(index + 1),\n    ];\n\n    setClocks(updatedClocks);\n  }\n\n  return (\n    <div className=\"App-container\">\n      <Form onFormSubmit={handleFormSubmit} />\n      <div className=\"App-clocks-container\">\n        {clocks.map((clock) => {\n          return (\n            <Clock\n              key={clock.id}\n              id={clock.id}\n              name={clock.name}\n              userTimezone={clock.userTimezone}\n              onDeleteClick={handleDeleteClick}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}